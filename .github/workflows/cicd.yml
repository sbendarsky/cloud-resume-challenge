name: CI / CD
on:
 push:
   branches:
     - main

jobs:

 Infrastructure:
   name: Terraform Infrastructure
   runs-on: ubuntu-latest
   env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
   steps:
     - name: Checkout
       uses: actions/checkout@v2
     
     - name: Init
       id: init
       run: cd terraform && terraform init
     
     - name: plan
       id: plan
       run: cd terraform && terraform plan -out=tfplan
             
     - name: terraform apply
       id: apply
       run: |
          cd terraform

          terraform import aws_s3_bucket.my_bucket resume.sbendarsky.me
          terraform import aws_iam_user.cloudfront_dummy_user cloudfront_dummy_user
          terraform import aws_iam_role.cloudfront_s3_access_role CloudFrontS3AccessRole
          terraform import aws_iam_role.iam_for_lambda iam_for_lambda
          terraform import aws_iam_policy.iam_policy_for_resume_project arn:aws:iam::489653259257:policy/aws_iam_policy_for_terraform_resume_project_policy
          terraform import aws_dynamodb_table.dynamodbtable cloudresume-table
          
          # Apply changes
          if terraform apply -auto-approve; then
            echo "Terraform apply succeeded."
          else
            echo "Terraform apply failed."
          fi
          
          terraform destroy -auto-approve

 sync-website:
   name: Sync Website
   runs-on: ubuntu-latest
   needs: Infrastructure
   steps:
     - name: Checkout
       uses: actions/checkout@v2

     - name: Sync Website
       uses: jakejarvis/s3-sync-action@master
       with:
         args: --acl private --follow-symlinks --delete
       env:
         AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         AWS_REGION: ${{ secrets.AWS_REGION }}
         SOURCE_DIR: "web"